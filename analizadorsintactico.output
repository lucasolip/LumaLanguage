Gram√°tica

    0 $accept: program $end

    1 program: instructions

    2 instructions: instruction
    3             | instructions NEWINSTRUCTION instruction

    4 instruction: assignment
    5            | control
    6            | loop
    7            | functionDefinition
    8            | writeCall
    9            | bareFunctionCall
   10            | %empty
   11            | return

   12 return: RETURN expression

   13 assignment: IDENTIFIER '=' expression

   14 bareFunctionCall: IDENTIFIER
   15                 | IDENTIFIER '(' ')'

   16 functionCall: functionHeaderOpen parameter ')'
   17             | functionHeaderOpen parameter error

   18 writeCall: WRITE expression

   19 functionHeaderOpen: IDENTIFIER '('

   20 functionHeader: IDENTIFIER ':'
   21               | functionHeaderOpen definingParameter ')' ':'

   22 functionDefinition: functionHeader instructions END
   23                   | functionHeader instructions error

   24 definingParameter: definingParameter ',' IDENTIFIER
   25                  | IDENTIFIER

   26 parameter: expression
   27          | parameter ',' expression

   28 controlHeader: IF expression ':'

   29 control: controlHeader instructions ELSE ':' instructions END
   30        | controlHeader instructions END
   31        | controlHeader instructions error
   32        | controlHeader instructions ELSE ':' instructions error

   33 $@1: %empty

   34 control: IF expression error $@1 instructions END

   35 $@2: %empty

   36 control: controlHeader instructions ELSE error $@2 instructions END

   37 loopHeader: WHILE expression ':'

   38 loop: loopHeader instructions END
   39     | loopHeader instructions error

   40 $@3: %empty

   41 loop: WHILE expression error $@3 instructions END

   42 expression: expression EQUALS expression
   43           | expression DIFFERENT expression
   44           | expression GREATER expression
   45           | expression LESS expression
   46           | expression GREATEREQUAL expression
   47           | expression LESSEQUAL expression
   48           | proposition

   49 proposition: proposition 'o' andProposition
   50            | andProposition

   51 andProposition: andProposition 'y' negatedProposition
   52               | negatedProposition

   53 negatedProposition: NOT operation
   54                   | operation

   55 operation: operation '+' product
   56          | operation '-' product
   57          | product

   58 product: product '*' signedOperand
   59        | product '/' signedOperand
   60        | product MODULO signedOperand
   61        | signedOperand

   62 signedOperand: '-' operand
   63              | '+' operand
   64              | operand
   65              | error

   66 operand: FLOAT
   67        | INTEGER
   68        | STRING
   69        | CHARACTER
   70        | IDENTIFIER
   71        | functionCall
   72        | READ
   73        | VERDADERO
   74        | FALSO
   75        | '(' expression ')'
   76        | '(' expression error


Terminales con las reglas donde aparecen

    $end (0) 0
    '(' (40) 15 19 75 76
    ')' (41) 15 16 21 75
    '*' (42) 58
    '+' (43) 55 63
    ',' (44) 24 27
    '-' (45) 56 62
    '/' (47) 59
    ':' (58) 20 21 28 29 32 37
    '=' (61) 13
    'o' (111) 49
    'y' (121) 51
    error (256) 17 23 31 32 34 36 39 41 65 76
    WRITE (258) 18
    READ (259) 72
    RETURN (260) 12
    WHILE (261) 37 41
    IF (262) 28 34
    ELSE (263) 29 32 36
    END (264) 22 29 30 34 36 38 41
    MODULO (265) 60
    NOT (266) 53
    VERDADERO (267) 73
    FALSO (268) 74
    NEWINSTRUCTION (269) 3
    GREATER (270) 44
    LESS (271) 45
    EQUALS (272) 42
    GREATEREQUAL (273) 46
    LESSEQUAL (274) 47
    DIFFERENT (275) 43
    IDENTIFIER <identifier> (276) 13 14 15 19 20 24 25 70
    FLOAT <floating> (277) 66
    CHARACTER <character> (278) 69
    INTEGER <integer> (279) 67
    STRING <string> (280) 68


No terminales con las reglas donde aparecen

    $accept (37)
        on left: 0
    program (38)
        on left: 1
        on right: 0
    instructions (39)
        on left: 2 3
        on right: 1 3 22 23 29 30 31 32 34 36 38 39 41
    instruction (40)
        on left: 4 5 6 7 8 9 10 11
        on right: 2 3
    return (41)
        on left: 12
        on right: 11
    assignment (42)
        on left: 13
        on right: 4
    bareFunctionCall (43)
        on left: 14 15
        on right: 9
    functionCall <identifier> (44)
        on left: 16 17
        on right: 71
    writeCall (45)
        on left: 18
        on right: 8
    functionHeaderOpen <identifier> (46)
        on left: 19
        on right: 16 17 21
    functionHeader <identifier> (47)
        on left: 20 21
        on right: 22 23
    functionDefinition (48)
        on left: 22 23
        on right: 7
    definingParameter <identifier> (49)
        on left: 24 25
        on right: 21 24
    parameter (50)
        on left: 26 27
        on right: 16 17 27
    controlHeader (51)
        on left: 28
        on right: 29 30 31 32 36
    control (52)
        on left: 29 30 31 32 34 36
        on right: 5
    $@1 (53)
        on left: 33
        on right: 34
    $@2 (54)
        on left: 35
        on right: 36
    loopHeader (55)
        on left: 37
        on right: 38 39
    loop (56)
        on left: 38 39 41
        on right: 6
    $@3 (57)
        on left: 40
        on right: 41
    expression (58)
        on left: 42 43 44 45 46 47 48
        on right: 12 13 18 26 27 28 34 37 41 42 43 44 45 46 47 75 76
    proposition (59)
        on left: 49 50
        on right: 48 49
    andProposition (60)
        on left: 51 52
        on right: 49 50 51
    negatedProposition (61)
        on left: 53 54
        on right: 51 52
    operation (62)
        on left: 55 56 57
        on right: 53 54 55 56
    product (63)
        on left: 58 59 60 61
        on right: 55 56 57 58 59 60
    signedOperand (64)
        on left: 62 63 64 65
        on right: 58 59 60 61
    operand (65)
        on left: 66 67 68 69 70 71 72 73 74 75 76
        on right: 62 63 64


Estado 0

    0 $accept: . program $end

    WRITE       desplazar e ir al estado 1
    RETURN      desplazar e ir al estado 2
    WHILE       desplazar e ir al estado 3
    IF          desplazar e ir al estado 4
    IDENTIFIER  desplazar e ir al estado 5

    $default  reduce usando la regla 10 (instruction)

    program             ir al estado 6
    instructions        ir al estado 7
    instruction         ir al estado 8
    return              ir al estado 9
    assignment          ir al estado 10
    bareFunctionCall    ir al estado 11
    writeCall           ir al estado 12
    functionHeaderOpen  ir al estado 13
    functionHeader      ir al estado 14
    functionDefinition  ir al estado 15
    controlHeader       ir al estado 16
    control             ir al estado 17
    loopHeader          ir al estado 18
    loop                ir al estado 19


Estado 1

   18 writeCall: WRITE . expression

    error       desplazar e ir al estado 20
    READ        desplazar e ir al estado 21
    NOT         desplazar e ir al estado 22
    VERDADERO   desplazar e ir al estado 23
    FALSO       desplazar e ir al estado 24
    IDENTIFIER  desplazar e ir al estado 25
    FLOAT       desplazar e ir al estado 26
    CHARACTER   desplazar e ir al estado 27
    INTEGER     desplazar e ir al estado 28
    STRING      desplazar e ir al estado 29
    '+'         desplazar e ir al estado 30
    '-'         desplazar e ir al estado 31
    '('         desplazar e ir al estado 32

    functionCall        ir al estado 33
    functionHeaderOpen  ir al estado 34
    expression          ir al estado 35
    proposition         ir al estado 36
    andProposition      ir al estado 37
    negatedProposition  ir al estado 38
    operation           ir al estado 39
    product             ir al estado 40
    signedOperand       ir al estado 41
    operand             ir al estado 42


Estado 2

   12 return: RETURN . expression

    error       desplazar e ir al estado 20
    READ        desplazar e ir al estado 21
    NOT         desplazar e ir al estado 22
    VERDADERO   desplazar e ir al estado 23
    FALSO       desplazar e ir al estado 24
    IDENTIFIER  desplazar e ir al estado 25
    FLOAT       desplazar e ir al estado 26
    CHARACTER   desplazar e ir al estado 27
    INTEGER     desplazar e ir al estado 28
    STRING      desplazar e ir al estado 29
    '+'         desplazar e ir al estado 30
    '-'         desplazar e ir al estado 31
    '('         desplazar e ir al estado 32

    functionCall        ir al estado 33
    functionHeaderOpen  ir al estado 34
    expression          ir al estado 43
    proposition         ir al estado 36
    andProposition      ir al estado 37
    negatedProposition  ir al estado 38
    operation           ir al estado 39
    product             ir al estado 40
    signedOperand       ir al estado 41
    operand             ir al estado 42


Estado 3

   37 loopHeader: WHILE . expression ':'
   41 loop: WHILE . expression error $@3 instructions END

    error       desplazar e ir al estado 20
    READ        desplazar e ir al estado 21
    NOT         desplazar e ir al estado 22
    VERDADERO   desplazar e ir al estado 23
    FALSO       desplazar e ir al estado 24
    IDENTIFIER  desplazar e ir al estado 25
    FLOAT       desplazar e ir al estado 26
    CHARACTER   desplazar e ir al estado 27
    INTEGER     desplazar e ir al estado 28
    STRING      desplazar e ir al estado 29
    '+'         desplazar e ir al estado 30
    '-'         desplazar e ir al estado 31
    '('         desplazar e ir al estado 32

    functionCall        ir al estado 33
    functionHeaderOpen  ir al estado 34
    expression          ir al estado 44
    proposition         ir al estado 36
    andProposition      ir al estado 37
    negatedProposition  ir al estado 38
    operation           ir al estado 39
    product             ir al estado 40
    signedOperand       ir al estado 41
    operand             ir al estado 42


Estado 4

   28 controlHeader: IF . expression ':'
   34 control: IF . expression error $@1 instructions END

    error       desplazar e ir al estado 20
    READ        desplazar e ir al estado 21
    NOT         desplazar e ir al estado 22
    VERDADERO   desplazar e ir al estado 23
    FALSO       desplazar e ir al estado 24
    IDENTIFIER  desplazar e ir al estado 25
    FLOAT       desplazar e ir al estado 26
    CHARACTER   desplazar e ir al estado 27
    INTEGER     desplazar e ir al estado 28
    STRING      desplazar e ir al estado 29
    '+'         desplazar e ir al estado 30
    '-'         desplazar e ir al estado 31
    '('         desplazar e ir al estado 32

    functionCall        ir al estado 33
    functionHeaderOpen  ir al estado 34
    expression          ir al estado 45
    proposition         ir al estado 36
    andProposition      ir al estado 37
    negatedProposition  ir al estado 38
    operation           ir al estado 39
    product             ir al estado 40
    signedOperand       ir al estado 41
    operand             ir al estado 42


Estado 5

   13 assignment: IDENTIFIER . '=' expression
   14 bareFunctionCall: IDENTIFIER .
   15                 | IDENTIFIER . '(' ')'
   19 functionHeaderOpen: IDENTIFIER . '('
   20 functionHeader: IDENTIFIER . ':'

    '='  desplazar e ir al estado 46
    '('  desplazar e ir al estado 47
    ':'  desplazar e ir al estado 48

    $default  reduce usando la regla 14 (bareFunctionCall)


Estado 6

    0 $accept: program . $end

    $end  desplazar e ir al estado 49


Estado 7

    1 program: instructions .
    3 instructions: instructions . NEWINSTRUCTION instruction

    NEWINSTRUCTION  desplazar e ir al estado 50

    $default  reduce usando la regla 1 (program)


Estado 8

    2 instructions: instruction .

    $default  reduce usando la regla 2 (instructions)


Estado 9

   11 instruction: return .

    $default  reduce usando la regla 11 (instruction)


Estado 10

    4 instruction: assignment .

    $default  reduce usando la regla 4 (instruction)


Estado 11

    9 instruction: bareFunctionCall .

    $default  reduce usando la regla 9 (instruction)


Estado 12

    8 instruction: writeCall .

    $default  reduce usando la regla 8 (instruction)


Estado 13

   21 functionHeader: functionHeaderOpen . definingParameter ')' ':'

    IDENTIFIER  desplazar e ir al estado 51

    definingParameter  ir al estado 52


Estado 14

   22 functionDefinition: functionHeader . instructions END
   23                   | functionHeader . instructions error

    WRITE       desplazar e ir al estado 1
    RETURN      desplazar e ir al estado 2
    WHILE       desplazar e ir al estado 3
    IF          desplazar e ir al estado 4
    IDENTIFIER  desplazar e ir al estado 5

    $default  reduce usando la regla 10 (instruction)

    instructions        ir al estado 53
    instruction         ir al estado 8
    return              ir al estado 9
    assignment          ir al estado 10
    bareFunctionCall    ir al estado 11
    writeCall           ir al estado 12
    functionHeaderOpen  ir al estado 13
    functionHeader      ir al estado 14
    functionDefinition  ir al estado 15
    controlHeader       ir al estado 16
    control             ir al estado 17
    loopHeader          ir al estado 18
    loop                ir al estado 19


Estado 15

    7 instruction: functionDefinition .

    $default  reduce usando la regla 7 (instruction)


Estado 16

   29 control: controlHeader . instructions ELSE ':' instructions END
   30        | controlHeader . instructions END
   31        | controlHeader . instructions error
   32        | controlHeader . instructions ELSE ':' instructions error
   36        | controlHeader . instructions ELSE error $@2 instructions END

    WRITE       desplazar e ir al estado 1
    RETURN      desplazar e ir al estado 2
    WHILE       desplazar e ir al estado 3
    IF          desplazar e ir al estado 4
    IDENTIFIER  desplazar e ir al estado 5

    $default  reduce usando la regla 10 (instruction)

    instructions        ir al estado 54
    instruction         ir al estado 8
    return              ir al estado 9
    assignment          ir al estado 10
    bareFunctionCall    ir al estado 11
    writeCall           ir al estado 12
    functionHeaderOpen  ir al estado 13
    functionHeader      ir al estado 14
    functionDefinition  ir al estado 15
    controlHeader       ir al estado 16
    control             ir al estado 17
    loopHeader          ir al estado 18
    loop                ir al estado 19


Estado 17

    5 instruction: control .

    $default  reduce usando la regla 5 (instruction)


Estado 18

   38 loop: loopHeader . instructions END
   39     | loopHeader . instructions error

    WRITE       desplazar e ir al estado 1
    RETURN      desplazar e ir al estado 2
    WHILE       desplazar e ir al estado 3
    IF          desplazar e ir al estado 4
    IDENTIFIER  desplazar e ir al estado 5

    $default  reduce usando la regla 10 (instruction)

    instructions        ir al estado 55
    instruction         ir al estado 8
    return              ir al estado 9
    assignment          ir al estado 10
    bareFunctionCall    ir al estado 11
    writeCall           ir al estado 12
    functionHeaderOpen  ir al estado 13
    functionHeader      ir al estado 14
    functionDefinition  ir al estado 15
    controlHeader       ir al estado 16
    control             ir al estado 17
    loopHeader          ir al estado 18
    loop                ir al estado 19


Estado 19

    6 instruction: loop .

    $default  reduce usando la regla 6 (instruction)


Estado 20

   65 signedOperand: error .

    $default  reduce usando la regla 65 (signedOperand)


Estado 21

   72 operand: READ .

    $default  reduce usando la regla 72 (operand)


Estado 22

   53 negatedProposition: NOT . operation

    error       desplazar e ir al estado 20
    READ        desplazar e ir al estado 21
    VERDADERO   desplazar e ir al estado 23
    FALSO       desplazar e ir al estado 24
    IDENTIFIER  desplazar e ir al estado 25
    FLOAT       desplazar e ir al estado 26
    CHARACTER   desplazar e ir al estado 27
    INTEGER     desplazar e ir al estado 28
    STRING      desplazar e ir al estado 29
    '+'         desplazar e ir al estado 30
    '-'         desplazar e ir al estado 31
    '('         desplazar e ir al estado 32

    functionCall        ir al estado 33
    functionHeaderOpen  ir al estado 34
    operation           ir al estado 56
    product             ir al estado 40
    signedOperand       ir al estado 41
    operand             ir al estado 42


Estado 23

   73 operand: VERDADERO .

    $default  reduce usando la regla 73 (operand)


Estado 24

   74 operand: FALSO .

    $default  reduce usando la regla 74 (operand)


Estado 25

   19 functionHeaderOpen: IDENTIFIER . '('
   70 operand: IDENTIFIER .

    '('  desplazar e ir al estado 57

    $default  reduce usando la regla 70 (operand)


Estado 26

   66 operand: FLOAT .

    $default  reduce usando la regla 66 (operand)


Estado 27

   69 operand: CHARACTER .

    $default  reduce usando la regla 69 (operand)


Estado 28

   67 operand: INTEGER .

    $default  reduce usando la regla 67 (operand)


Estado 29

   68 operand: STRING .

    $default  reduce usando la regla 68 (operand)


Estado 30

   63 signedOperand: '+' . operand

    READ        desplazar e ir al estado 21
    VERDADERO   desplazar e ir al estado 23
    FALSO       desplazar e ir al estado 24
    IDENTIFIER  desplazar e ir al estado 25
    FLOAT       desplazar e ir al estado 26
    CHARACTER   desplazar e ir al estado 27
    INTEGER     desplazar e ir al estado 28
    STRING      desplazar e ir al estado 29
    '('         desplazar e ir al estado 32

    functionCall        ir al estado 33
    functionHeaderOpen  ir al estado 34
    operand             ir al estado 58


Estado 31

   62 signedOperand: '-' . operand

    READ        desplazar e ir al estado 21
    VERDADERO   desplazar e ir al estado 23
    FALSO       desplazar e ir al estado 24
    IDENTIFIER  desplazar e ir al estado 25
    FLOAT       desplazar e ir al estado 26
    CHARACTER   desplazar e ir al estado 27
    INTEGER     desplazar e ir al estado 28
    STRING      desplazar e ir al estado 29
    '('         desplazar e ir al estado 32

    functionCall        ir al estado 33
    functionHeaderOpen  ir al estado 34
    operand             ir al estado 59


Estado 32

   75 operand: '(' . expression ')'
   76        | '(' . expression error

    error       desplazar e ir al estado 20
    READ        desplazar e ir al estado 21
    NOT         desplazar e ir al estado 22
    VERDADERO   desplazar e ir al estado 23
    FALSO       desplazar e ir al estado 24
    IDENTIFIER  desplazar e ir al estado 25
    FLOAT       desplazar e ir al estado 26
    CHARACTER   desplazar e ir al estado 27
    INTEGER     desplazar e ir al estado 28
    STRING      desplazar e ir al estado 29
    '+'         desplazar e ir al estado 30
    '-'         desplazar e ir al estado 31
    '('         desplazar e ir al estado 32

    functionCall        ir al estado 33
    functionHeaderOpen  ir al estado 34
    expression          ir al estado 60
    proposition         ir al estado 36
    andProposition      ir al estado 37
    negatedProposition  ir al estado 38
    operation           ir al estado 39
    product             ir al estado 40
    signedOperand       ir al estado 41
    operand             ir al estado 42


Estado 33

   71 operand: functionCall .

    $default  reduce usando la regla 71 (operand)


Estado 34

   16 functionCall: functionHeaderOpen . parameter ')'
   17             | functionHeaderOpen . parameter error

    error       desplazar e ir al estado 20
    READ        desplazar e ir al estado 21
    NOT         desplazar e ir al estado 22
    VERDADERO   desplazar e ir al estado 23
    FALSO       desplazar e ir al estado 24
    IDENTIFIER  desplazar e ir al estado 25
    FLOAT       desplazar e ir al estado 26
    CHARACTER   desplazar e ir al estado 27
    INTEGER     desplazar e ir al estado 28
    STRING      desplazar e ir al estado 29
    '+'         desplazar e ir al estado 30
    '-'         desplazar e ir al estado 31
    '('         desplazar e ir al estado 32

    functionCall        ir al estado 33
    functionHeaderOpen  ir al estado 34
    parameter           ir al estado 61
    expression          ir al estado 62
    proposition         ir al estado 36
    andProposition      ir al estado 37
    negatedProposition  ir al estado 38
    operation           ir al estado 39
    product             ir al estado 40
    signedOperand       ir al estado 41
    operand             ir al estado 42


Estado 35

   18 writeCall: WRITE expression .
   42 expression: expression . EQUALS expression
   43           | expression . DIFFERENT expression
   44           | expression . GREATER expression
   45           | expression . LESS expression
   46           | expression . GREATEREQUAL expression
   47           | expression . LESSEQUAL expression

    GREATER       desplazar e ir al estado 63
    LESS          desplazar e ir al estado 64
    EQUALS        desplazar e ir al estado 65
    GREATEREQUAL  desplazar e ir al estado 66
    LESSEQUAL     desplazar e ir al estado 67
    DIFFERENT     desplazar e ir al estado 68

    $default  reduce usando la regla 18 (writeCall)


Estado 36

   48 expression: proposition .
   49 proposition: proposition . 'o' andProposition

    'o'  desplazar e ir al estado 69

    $default  reduce usando la regla 48 (expression)


Estado 37

   50 proposition: andProposition .
   51 andProposition: andProposition . 'y' negatedProposition

    'y'  desplazar e ir al estado 70

    $default  reduce usando la regla 50 (proposition)


Estado 38

   52 andProposition: negatedProposition .

    $default  reduce usando la regla 52 (andProposition)


Estado 39

   54 negatedProposition: operation .
   55 operation: operation . '+' product
   56          | operation . '-' product

    '+'  desplazar e ir al estado 71
    '-'  desplazar e ir al estado 72

    $default  reduce usando la regla 54 (negatedProposition)


Estado 40

   57 operation: product .
   58 product: product . '*' signedOperand
   59        | product . '/' signedOperand
   60        | product . MODULO signedOperand

    MODULO  desplazar e ir al estado 73
    '*'     desplazar e ir al estado 74
    '/'     desplazar e ir al estado 75

    $default  reduce usando la regla 57 (operation)


Estado 41

   61 product: signedOperand .

    $default  reduce usando la regla 61 (product)


Estado 42

   64 signedOperand: operand .

    $default  reduce usando la regla 64 (signedOperand)


Estado 43

   12 return: RETURN expression .
   42 expression: expression . EQUALS expression
   43           | expression . DIFFERENT expression
   44           | expression . GREATER expression
   45           | expression . LESS expression
   46           | expression . GREATEREQUAL expression
   47           | expression . LESSEQUAL expression

    GREATER       desplazar e ir al estado 63
    LESS          desplazar e ir al estado 64
    EQUALS        desplazar e ir al estado 65
    GREATEREQUAL  desplazar e ir al estado 66
    LESSEQUAL     desplazar e ir al estado 67
    DIFFERENT     desplazar e ir al estado 68

    $default  reduce usando la regla 12 (return)


Estado 44

   37 loopHeader: WHILE expression . ':'
   41 loop: WHILE expression . error $@3 instructions END
   42 expression: expression . EQUALS expression
   43           | expression . DIFFERENT expression
   44           | expression . GREATER expression
   45           | expression . LESS expression
   46           | expression . GREATEREQUAL expression
   47           | expression . LESSEQUAL expression

    error         desplazar e ir al estado 76
    GREATER       desplazar e ir al estado 63
    LESS          desplazar e ir al estado 64
    EQUALS        desplazar e ir al estado 65
    GREATEREQUAL  desplazar e ir al estado 66
    LESSEQUAL     desplazar e ir al estado 67
    DIFFERENT     desplazar e ir al estado 68
    ':'           desplazar e ir al estado 77


Estado 45

   28 controlHeader: IF expression . ':'
   34 control: IF expression . error $@1 instructions END
   42 expression: expression . EQUALS expression
   43           | expression . DIFFERENT expression
   44           | expression . GREATER expression
   45           | expression . LESS expression
   46           | expression . GREATEREQUAL expression
   47           | expression . LESSEQUAL expression

    error         desplazar e ir al estado 78
    GREATER       desplazar e ir al estado 63
    LESS          desplazar e ir al estado 64
    EQUALS        desplazar e ir al estado 65
    GREATEREQUAL  desplazar e ir al estado 66
    LESSEQUAL     desplazar e ir al estado 67
    DIFFERENT     desplazar e ir al estado 68
    ':'           desplazar e ir al estado 79


Estado 46

   13 assignment: IDENTIFIER '=' . expression

    error       desplazar e ir al estado 20
    READ        desplazar e ir al estado 21
    NOT         desplazar e ir al estado 22
    VERDADERO   desplazar e ir al estado 23
    FALSO       desplazar e ir al estado 24
    IDENTIFIER  desplazar e ir al estado 25
    FLOAT       desplazar e ir al estado 26
    CHARACTER   desplazar e ir al estado 27
    INTEGER     desplazar e ir al estado 28
    STRING      desplazar e ir al estado 29
    '+'         desplazar e ir al estado 30
    '-'         desplazar e ir al estado 31
    '('         desplazar e ir al estado 32

    functionCall        ir al estado 33
    functionHeaderOpen  ir al estado 34
    expression          ir al estado 80
    proposition         ir al estado 36
    andProposition      ir al estado 37
    negatedProposition  ir al estado 38
    operation           ir al estado 39
    product             ir al estado 40
    signedOperand       ir al estado 41
    operand             ir al estado 42


Estado 47

   15 bareFunctionCall: IDENTIFIER '(' . ')'
   19 functionHeaderOpen: IDENTIFIER '(' .

    ')'  desplazar e ir al estado 81

    $default  reduce usando la regla 19 (functionHeaderOpen)


Estado 48

   20 functionHeader: IDENTIFIER ':' .

    $default  reduce usando la regla 20 (functionHeader)


Estado 49

    0 $accept: program $end .

    $default  aceptar


Estado 50

    3 instructions: instructions NEWINSTRUCTION . instruction

    WRITE       desplazar e ir al estado 1
    RETURN      desplazar e ir al estado 2
    WHILE       desplazar e ir al estado 3
    IF          desplazar e ir al estado 4
    IDENTIFIER  desplazar e ir al estado 5

    $default  reduce usando la regla 10 (instruction)

    instruction         ir al estado 82
    return              ir al estado 9
    assignment          ir al estado 10
    bareFunctionCall    ir al estado 11
    writeCall           ir al estado 12
    functionHeaderOpen  ir al estado 13
    functionHeader      ir al estado 14
    functionDefinition  ir al estado 15
    controlHeader       ir al estado 16
    control             ir al estado 17
    loopHeader          ir al estado 18
    loop                ir al estado 19


Estado 51

   25 definingParameter: IDENTIFIER .

    $default  reduce usando la regla 25 (definingParameter)


Estado 52

   21 functionHeader: functionHeaderOpen definingParameter . ')' ':'
   24 definingParameter: definingParameter . ',' IDENTIFIER

    ')'  desplazar e ir al estado 83
    ','  desplazar e ir al estado 84


Estado 53

    3 instructions: instructions . NEWINSTRUCTION instruction
   22 functionDefinition: functionHeader instructions . END
   23                   | functionHeader instructions . error

    error           desplazar e ir al estado 85
    END             desplazar e ir al estado 86
    NEWINSTRUCTION  desplazar e ir al estado 50


Estado 54

    3 instructions: instructions . NEWINSTRUCTION instruction
   29 control: controlHeader instructions . ELSE ':' instructions END
   30        | controlHeader instructions . END
   31        | controlHeader instructions . error
   32        | controlHeader instructions . ELSE ':' instructions error
   36        | controlHeader instructions . ELSE error $@2 instructions END

    error           desplazar e ir al estado 87
    ELSE            desplazar e ir al estado 88
    END             desplazar e ir al estado 89
    NEWINSTRUCTION  desplazar e ir al estado 50


Estado 55

    3 instructions: instructions . NEWINSTRUCTION instruction
   38 loop: loopHeader instructions . END
   39     | loopHeader instructions . error

    error           desplazar e ir al estado 90
    END             desplazar e ir al estado 91
    NEWINSTRUCTION  desplazar e ir al estado 50


Estado 56

   53 negatedProposition: NOT operation .
   55 operation: operation . '+' product
   56          | operation . '-' product

    '+'  desplazar e ir al estado 71
    '-'  desplazar e ir al estado 72

    $default  reduce usando la regla 53 (negatedProposition)


Estado 57

   19 functionHeaderOpen: IDENTIFIER '(' .

    $default  reduce usando la regla 19 (functionHeaderOpen)


Estado 58

   63 signedOperand: '+' operand .

    $default  reduce usando la regla 63 (signedOperand)


Estado 59

   62 signedOperand: '-' operand .

    $default  reduce usando la regla 62 (signedOperand)


Estado 60

   42 expression: expression . EQUALS expression
   43           | expression . DIFFERENT expression
   44           | expression . GREATER expression
   45           | expression . LESS expression
   46           | expression . GREATEREQUAL expression
   47           | expression . LESSEQUAL expression
   75 operand: '(' expression . ')'
   76        | '(' expression . error

    error         desplazar e ir al estado 92
    GREATER       desplazar e ir al estado 63
    LESS          desplazar e ir al estado 64
    EQUALS        desplazar e ir al estado 65
    GREATEREQUAL  desplazar e ir al estado 66
    LESSEQUAL     desplazar e ir al estado 67
    DIFFERENT     desplazar e ir al estado 68
    ')'           desplazar e ir al estado 93


Estado 61

   16 functionCall: functionHeaderOpen parameter . ')'
   17             | functionHeaderOpen parameter . error
   27 parameter: parameter . ',' expression

    error  desplazar e ir al estado 94
    ')'    desplazar e ir al estado 95
    ','    desplazar e ir al estado 96


Estado 62

   26 parameter: expression .
   42 expression: expression . EQUALS expression
   43           | expression . DIFFERENT expression
   44           | expression . GREATER expression
   45           | expression . LESS expression
   46           | expression . GREATEREQUAL expression
   47           | expression . LESSEQUAL expression

    GREATER       desplazar e ir al estado 63
    LESS          desplazar e ir al estado 64
    EQUALS        desplazar e ir al estado 65
    GREATEREQUAL  desplazar e ir al estado 66
    LESSEQUAL     desplazar e ir al estado 67
    DIFFERENT     desplazar e ir al estado 68

    $default  reduce usando la regla 26 (parameter)


Estado 63

   44 expression: expression GREATER . expression

    error       desplazar e ir al estado 20
    READ        desplazar e ir al estado 21
    NOT         desplazar e ir al estado 22
    VERDADERO   desplazar e ir al estado 23
    FALSO       desplazar e ir al estado 24
    IDENTIFIER  desplazar e ir al estado 25
    FLOAT       desplazar e ir al estado 26
    CHARACTER   desplazar e ir al estado 27
    INTEGER     desplazar e ir al estado 28
    STRING      desplazar e ir al estado 29
    '+'         desplazar e ir al estado 30
    '-'         desplazar e ir al estado 31
    '('         desplazar e ir al estado 32

    functionCall        ir al estado 33
    functionHeaderOpen  ir al estado 34
    expression          ir al estado 97
    proposition         ir al estado 36
    andProposition      ir al estado 37
    negatedProposition  ir al estado 38
    operation           ir al estado 39
    product             ir al estado 40
    signedOperand       ir al estado 41
    operand             ir al estado 42


Estado 64

   45 expression: expression LESS . expression

    error       desplazar e ir al estado 20
    READ        desplazar e ir al estado 21
    NOT         desplazar e ir al estado 22
    VERDADERO   desplazar e ir al estado 23
    FALSO       desplazar e ir al estado 24
    IDENTIFIER  desplazar e ir al estado 25
    FLOAT       desplazar e ir al estado 26
    CHARACTER   desplazar e ir al estado 27
    INTEGER     desplazar e ir al estado 28
    STRING      desplazar e ir al estado 29
    '+'         desplazar e ir al estado 30
    '-'         desplazar e ir al estado 31
    '('         desplazar e ir al estado 32

    functionCall        ir al estado 33
    functionHeaderOpen  ir al estado 34
    expression          ir al estado 98
    proposition         ir al estado 36
    andProposition      ir al estado 37
    negatedProposition  ir al estado 38
    operation           ir al estado 39
    product             ir al estado 40
    signedOperand       ir al estado 41
    operand             ir al estado 42


Estado 65

   42 expression: expression EQUALS . expression

    error       desplazar e ir al estado 20
    READ        desplazar e ir al estado 21
    NOT         desplazar e ir al estado 22
    VERDADERO   desplazar e ir al estado 23
    FALSO       desplazar e ir al estado 24
    IDENTIFIER  desplazar e ir al estado 25
    FLOAT       desplazar e ir al estado 26
    CHARACTER   desplazar e ir al estado 27
    INTEGER     desplazar e ir al estado 28
    STRING      desplazar e ir al estado 29
    '+'         desplazar e ir al estado 30
    '-'         desplazar e ir al estado 31
    '('         desplazar e ir al estado 32

    functionCall        ir al estado 33
    functionHeaderOpen  ir al estado 34
    expression          ir al estado 99
    proposition         ir al estado 36
    andProposition      ir al estado 37
    negatedProposition  ir al estado 38
    operation           ir al estado 39
    product             ir al estado 40
    signedOperand       ir al estado 41
    operand             ir al estado 42


Estado 66

   46 expression: expression GREATEREQUAL . expression

    error       desplazar e ir al estado 20
    READ        desplazar e ir al estado 21
    NOT         desplazar e ir al estado 22
    VERDADERO   desplazar e ir al estado 23
    FALSO       desplazar e ir al estado 24
    IDENTIFIER  desplazar e ir al estado 25
    FLOAT       desplazar e ir al estado 26
    CHARACTER   desplazar e ir al estado 27
    INTEGER     desplazar e ir al estado 28
    STRING      desplazar e ir al estado 29
    '+'         desplazar e ir al estado 30
    '-'         desplazar e ir al estado 31
    '('         desplazar e ir al estado 32

    functionCall        ir al estado 33
    functionHeaderOpen  ir al estado 34
    expression          ir al estado 100
    proposition         ir al estado 36
    andProposition      ir al estado 37
    negatedProposition  ir al estado 38
    operation           ir al estado 39
    product             ir al estado 40
    signedOperand       ir al estado 41
    operand             ir al estado 42


Estado 67

   47 expression: expression LESSEQUAL . expression

    error       desplazar e ir al estado 20
    READ        desplazar e ir al estado 21
    NOT         desplazar e ir al estado 22
    VERDADERO   desplazar e ir al estado 23
    FALSO       desplazar e ir al estado 24
    IDENTIFIER  desplazar e ir al estado 25
    FLOAT       desplazar e ir al estado 26
    CHARACTER   desplazar e ir al estado 27
    INTEGER     desplazar e ir al estado 28
    STRING      desplazar e ir al estado 29
    '+'         desplazar e ir al estado 30
    '-'         desplazar e ir al estado 31
    '('         desplazar e ir al estado 32

    functionCall        ir al estado 33
    functionHeaderOpen  ir al estado 34
    expression          ir al estado 101
    proposition         ir al estado 36
    andProposition      ir al estado 37
    negatedProposition  ir al estado 38
    operation           ir al estado 39
    product             ir al estado 40
    signedOperand       ir al estado 41
    operand             ir al estado 42


Estado 68

   43 expression: expression DIFFERENT . expression

    error       desplazar e ir al estado 20
    READ        desplazar e ir al estado 21
    NOT         desplazar e ir al estado 22
    VERDADERO   desplazar e ir al estado 23
    FALSO       desplazar e ir al estado 24
    IDENTIFIER  desplazar e ir al estado 25
    FLOAT       desplazar e ir al estado 26
    CHARACTER   desplazar e ir al estado 27
    INTEGER     desplazar e ir al estado 28
    STRING      desplazar e ir al estado 29
    '+'         desplazar e ir al estado 30
    '-'         desplazar e ir al estado 31
    '('         desplazar e ir al estado 32

    functionCall        ir al estado 33
    functionHeaderOpen  ir al estado 34
    expression          ir al estado 102
    proposition         ir al estado 36
    andProposition      ir al estado 37
    negatedProposition  ir al estado 38
    operation           ir al estado 39
    product             ir al estado 40
    signedOperand       ir al estado 41
    operand             ir al estado 42


Estado 69

   49 proposition: proposition 'o' . andProposition

    error       desplazar e ir al estado 20
    READ        desplazar e ir al estado 21
    NOT         desplazar e ir al estado 22
    VERDADERO   desplazar e ir al estado 23
    FALSO       desplazar e ir al estado 24
    IDENTIFIER  desplazar e ir al estado 25
    FLOAT       desplazar e ir al estado 26
    CHARACTER   desplazar e ir al estado 27
    INTEGER     desplazar e ir al estado 28
    STRING      desplazar e ir al estado 29
    '+'         desplazar e ir al estado 30
    '-'         desplazar e ir al estado 31
    '('         desplazar e ir al estado 32

    functionCall        ir al estado 33
    functionHeaderOpen  ir al estado 34
    andProposition      ir al estado 103
    negatedProposition  ir al estado 38
    operation           ir al estado 39
    product             ir al estado 40
    signedOperand       ir al estado 41
    operand             ir al estado 42


Estado 70

   51 andProposition: andProposition 'y' . negatedProposition

    error       desplazar e ir al estado 20
    READ        desplazar e ir al estado 21
    NOT         desplazar e ir al estado 22
    VERDADERO   desplazar e ir al estado 23
    FALSO       desplazar e ir al estado 24
    IDENTIFIER  desplazar e ir al estado 25
    FLOAT       desplazar e ir al estado 26
    CHARACTER   desplazar e ir al estado 27
    INTEGER     desplazar e ir al estado 28
    STRING      desplazar e ir al estado 29
    '+'         desplazar e ir al estado 30
    '-'         desplazar e ir al estado 31
    '('         desplazar e ir al estado 32

    functionCall        ir al estado 33
    functionHeaderOpen  ir al estado 34
    negatedProposition  ir al estado 104
    operation           ir al estado 39
    product             ir al estado 40
    signedOperand       ir al estado 41
    operand             ir al estado 42


Estado 71

   55 operation: operation '+' . product

    error       desplazar e ir al estado 20
    READ        desplazar e ir al estado 21
    VERDADERO   desplazar e ir al estado 23
    FALSO       desplazar e ir al estado 24
    IDENTIFIER  desplazar e ir al estado 25
    FLOAT       desplazar e ir al estado 26
    CHARACTER   desplazar e ir al estado 27
    INTEGER     desplazar e ir al estado 28
    STRING      desplazar e ir al estado 29
    '+'         desplazar e ir al estado 30
    '-'         desplazar e ir al estado 31
    '('         desplazar e ir al estado 32

    functionCall        ir al estado 33
    functionHeaderOpen  ir al estado 34
    product             ir al estado 105
    signedOperand       ir al estado 41
    operand             ir al estado 42


Estado 72

   56 operation: operation '-' . product

    error       desplazar e ir al estado 20
    READ        desplazar e ir al estado 21
    VERDADERO   desplazar e ir al estado 23
    FALSO       desplazar e ir al estado 24
    IDENTIFIER  desplazar e ir al estado 25
    FLOAT       desplazar e ir al estado 26
    CHARACTER   desplazar e ir al estado 27
    INTEGER     desplazar e ir al estado 28
    STRING      desplazar e ir al estado 29
    '+'         desplazar e ir al estado 30
    '-'         desplazar e ir al estado 31
    '('         desplazar e ir al estado 32

    functionCall        ir al estado 33
    functionHeaderOpen  ir al estado 34
    product             ir al estado 106
    signedOperand       ir al estado 41
    operand             ir al estado 42


Estado 73

   60 product: product MODULO . signedOperand

    error       desplazar e ir al estado 20
    READ        desplazar e ir al estado 21
    VERDADERO   desplazar e ir al estado 23
    FALSO       desplazar e ir al estado 24
    IDENTIFIER  desplazar e ir al estado 25
    FLOAT       desplazar e ir al estado 26
    CHARACTER   desplazar e ir al estado 27
    INTEGER     desplazar e ir al estado 28
    STRING      desplazar e ir al estado 29
    '+'         desplazar e ir al estado 30
    '-'         desplazar e ir al estado 31
    '('         desplazar e ir al estado 32

    functionCall        ir al estado 33
    functionHeaderOpen  ir al estado 34
    signedOperand       ir al estado 107
    operand             ir al estado 42


Estado 74

   58 product: product '*' . signedOperand

    error       desplazar e ir al estado 20
    READ        desplazar e ir al estado 21
    VERDADERO   desplazar e ir al estado 23
    FALSO       desplazar e ir al estado 24
    IDENTIFIER  desplazar e ir al estado 25
    FLOAT       desplazar e ir al estado 26
    CHARACTER   desplazar e ir al estado 27
    INTEGER     desplazar e ir al estado 28
    STRING      desplazar e ir al estado 29
    '+'         desplazar e ir al estado 30
    '-'         desplazar e ir al estado 31
    '('         desplazar e ir al estado 32

    functionCall        ir al estado 33
    functionHeaderOpen  ir al estado 34
    signedOperand       ir al estado 108
    operand             ir al estado 42


Estado 75

   59 product: product '/' . signedOperand

    error       desplazar e ir al estado 20
    READ        desplazar e ir al estado 21
    VERDADERO   desplazar e ir al estado 23
    FALSO       desplazar e ir al estado 24
    IDENTIFIER  desplazar e ir al estado 25
    FLOAT       desplazar e ir al estado 26
    CHARACTER   desplazar e ir al estado 27
    INTEGER     desplazar e ir al estado 28
    STRING      desplazar e ir al estado 29
    '+'         desplazar e ir al estado 30
    '-'         desplazar e ir al estado 31
    '('         desplazar e ir al estado 32

    functionCall        ir al estado 33
    functionHeaderOpen  ir al estado 34
    signedOperand       ir al estado 109
    operand             ir al estado 42


Estado 76

   41 loop: WHILE expression error . $@3 instructions END

    $default  reduce usando la regla 40 ($@3)

    $@3  ir al estado 110


Estado 77

   37 loopHeader: WHILE expression ':' .

    $default  reduce usando la regla 37 (loopHeader)


Estado 78

   34 control: IF expression error . $@1 instructions END

    $default  reduce usando la regla 33 ($@1)

    $@1  ir al estado 111


Estado 79

   28 controlHeader: IF expression ':' .

    $default  reduce usando la regla 28 (controlHeader)


Estado 80

   13 assignment: IDENTIFIER '=' expression .
   42 expression: expression . EQUALS expression
   43           | expression . DIFFERENT expression
   44           | expression . GREATER expression
   45           | expression . LESS expression
   46           | expression . GREATEREQUAL expression
   47           | expression . LESSEQUAL expression

    GREATER       desplazar e ir al estado 63
    LESS          desplazar e ir al estado 64
    EQUALS        desplazar e ir al estado 65
    GREATEREQUAL  desplazar e ir al estado 66
    LESSEQUAL     desplazar e ir al estado 67
    DIFFERENT     desplazar e ir al estado 68

    $default  reduce usando la regla 13 (assignment)


Estado 81

   15 bareFunctionCall: IDENTIFIER '(' ')' .

    $default  reduce usando la regla 15 (bareFunctionCall)


Estado 82

    3 instructions: instructions NEWINSTRUCTION instruction .

    $default  reduce usando la regla 3 (instructions)


Estado 83

   21 functionHeader: functionHeaderOpen definingParameter ')' . ':'

    ':'  desplazar e ir al estado 112


Estado 84

   24 definingParameter: definingParameter ',' . IDENTIFIER

    IDENTIFIER  desplazar e ir al estado 113


Estado 85

   23 functionDefinition: functionHeader instructions error .

    $default  reduce usando la regla 23 (functionDefinition)


Estado 86

   22 functionDefinition: functionHeader instructions END .

    $default  reduce usando la regla 22 (functionDefinition)


Estado 87

   31 control: controlHeader instructions error .

    $default  reduce usando la regla 31 (control)


Estado 88

   29 control: controlHeader instructions ELSE . ':' instructions END
   32        | controlHeader instructions ELSE . ':' instructions error
   36        | controlHeader instructions ELSE . error $@2 instructions END

    error  desplazar e ir al estado 114
    ':'    desplazar e ir al estado 115


Estado 89

   30 control: controlHeader instructions END .

    $default  reduce usando la regla 30 (control)


Estado 90

   39 loop: loopHeader instructions error .

    $default  reduce usando la regla 39 (loop)


Estado 91

   38 loop: loopHeader instructions END .

    $default  reduce usando la regla 38 (loop)


Estado 92

   76 operand: '(' expression error .

    $default  reduce usando la regla 76 (operand)


Estado 93

   75 operand: '(' expression ')' .

    $default  reduce usando la regla 75 (operand)


Estado 94

   17 functionCall: functionHeaderOpen parameter error .

    $default  reduce usando la regla 17 (functionCall)


Estado 95

   16 functionCall: functionHeaderOpen parameter ')' .

    $default  reduce usando la regla 16 (functionCall)


Estado 96

   27 parameter: parameter ',' . expression

    error       desplazar e ir al estado 20
    READ        desplazar e ir al estado 21
    NOT         desplazar e ir al estado 22
    VERDADERO   desplazar e ir al estado 23
    FALSO       desplazar e ir al estado 24
    IDENTIFIER  desplazar e ir al estado 25
    FLOAT       desplazar e ir al estado 26
    CHARACTER   desplazar e ir al estado 27
    INTEGER     desplazar e ir al estado 28
    STRING      desplazar e ir al estado 29
    '+'         desplazar e ir al estado 30
    '-'         desplazar e ir al estado 31
    '('         desplazar e ir al estado 32

    functionCall        ir al estado 33
    functionHeaderOpen  ir al estado 34
    expression          ir al estado 116
    proposition         ir al estado 36
    andProposition      ir al estado 37
    negatedProposition  ir al estado 38
    operation           ir al estado 39
    product             ir al estado 40
    signedOperand       ir al estado 41
    operand             ir al estado 42


Estado 97

   42 expression: expression . EQUALS expression
   43           | expression . DIFFERENT expression
   44           | expression . GREATER expression
   44           | expression GREATER expression .
   45           | expression . LESS expression
   46           | expression . GREATEREQUAL expression
   47           | expression . LESSEQUAL expression

    LESS          desplazar e ir al estado 64
    GREATEREQUAL  desplazar e ir al estado 66
    LESSEQUAL     desplazar e ir al estado 67

    $default  reduce usando la regla 44 (expression)


Estado 98

   42 expression: expression . EQUALS expression
   43           | expression . DIFFERENT expression
   44           | expression . GREATER expression
   45           | expression . LESS expression
   45           | expression LESS expression .
   46           | expression . GREATEREQUAL expression
   47           | expression . LESSEQUAL expression

    GREATEREQUAL  desplazar e ir al estado 66
    LESSEQUAL     desplazar e ir al estado 67

    $default  reduce usando la regla 45 (expression)


Estado 99

   42 expression: expression . EQUALS expression
   42           | expression EQUALS expression .
   43           | expression . DIFFERENT expression
   44           | expression . GREATER expression
   45           | expression . LESS expression
   46           | expression . GREATEREQUAL expression
   47           | expression . LESSEQUAL expression

    GREATER       desplazar e ir al estado 63
    LESS          desplazar e ir al estado 64
    GREATEREQUAL  desplazar e ir al estado 66
    LESSEQUAL     desplazar e ir al estado 67
    DIFFERENT     desplazar e ir al estado 68

    $default  reduce usando la regla 42 (expression)


Estado 100

   42 expression: expression . EQUALS expression
   43           | expression . DIFFERENT expression
   44           | expression . GREATER expression
   45           | expression . LESS expression
   46           | expression . GREATEREQUAL expression
   46           | expression GREATEREQUAL expression .
   47           | expression . LESSEQUAL expression

    LESSEQUAL  desplazar e ir al estado 67

    $default  reduce usando la regla 46 (expression)


Estado 101

   42 expression: expression . EQUALS expression
   43           | expression . DIFFERENT expression
   44           | expression . GREATER expression
   45           | expression . LESS expression
   46           | expression . GREATEREQUAL expression
   47           | expression . LESSEQUAL expression
   47           | expression LESSEQUAL expression .

    $default  reduce usando la regla 47 (expression)


Estado 102

   42 expression: expression . EQUALS expression
   43           | expression . DIFFERENT expression
   43           | expression DIFFERENT expression .
   44           | expression . GREATER expression
   45           | expression . LESS expression
   46           | expression . GREATEREQUAL expression
   47           | expression . LESSEQUAL expression

    GREATER       desplazar e ir al estado 63
    LESS          desplazar e ir al estado 64
    GREATEREQUAL  desplazar e ir al estado 66
    LESSEQUAL     desplazar e ir al estado 67

    $default  reduce usando la regla 43 (expression)


Estado 103

   49 proposition: proposition 'o' andProposition .
   51 andProposition: andProposition . 'y' negatedProposition

    'y'  desplazar e ir al estado 70

    $default  reduce usando la regla 49 (proposition)


Estado 104

   51 andProposition: andProposition 'y' negatedProposition .

    $default  reduce usando la regla 51 (andProposition)


Estado 105

   55 operation: operation '+' product .
   58 product: product . '*' signedOperand
   59        | product . '/' signedOperand
   60        | product . MODULO signedOperand

    MODULO  desplazar e ir al estado 73
    '*'     desplazar e ir al estado 74
    '/'     desplazar e ir al estado 75

    $default  reduce usando la regla 55 (operation)


Estado 106

   56 operation: operation '-' product .
   58 product: product . '*' signedOperand
   59        | product . '/' signedOperand
   60        | product . MODULO signedOperand

    MODULO  desplazar e ir al estado 73
    '*'     desplazar e ir al estado 74
    '/'     desplazar e ir al estado 75

    $default  reduce usando la regla 56 (operation)


Estado 107

   60 product: product MODULO signedOperand .

    $default  reduce usando la regla 60 (product)


Estado 108

   58 product: product '*' signedOperand .

    $default  reduce usando la regla 58 (product)


Estado 109

   59 product: product '/' signedOperand .

    $default  reduce usando la regla 59 (product)


Estado 110

   41 loop: WHILE expression error $@3 . instructions END

    WRITE       desplazar e ir al estado 1
    RETURN      desplazar e ir al estado 2
    WHILE       desplazar e ir al estado 3
    IF          desplazar e ir al estado 4
    IDENTIFIER  desplazar e ir al estado 5

    $default  reduce usando la regla 10 (instruction)

    instructions        ir al estado 117
    instruction         ir al estado 8
    return              ir al estado 9
    assignment          ir al estado 10
    bareFunctionCall    ir al estado 11
    writeCall           ir al estado 12
    functionHeaderOpen  ir al estado 13
    functionHeader      ir al estado 14
    functionDefinition  ir al estado 15
    controlHeader       ir al estado 16
    control             ir al estado 17
    loopHeader          ir al estado 18
    loop                ir al estado 19


Estado 111

   34 control: IF expression error $@1 . instructions END

    WRITE       desplazar e ir al estado 1
    RETURN      desplazar e ir al estado 2
    WHILE       desplazar e ir al estado 3
    IF          desplazar e ir al estado 4
    IDENTIFIER  desplazar e ir al estado 5

    $default  reduce usando la regla 10 (instruction)

    instructions        ir al estado 118
    instruction         ir al estado 8
    return              ir al estado 9
    assignment          ir al estado 10
    bareFunctionCall    ir al estado 11
    writeCall           ir al estado 12
    functionHeaderOpen  ir al estado 13
    functionHeader      ir al estado 14
    functionDefinition  ir al estado 15
    controlHeader       ir al estado 16
    control             ir al estado 17
    loopHeader          ir al estado 18
    loop                ir al estado 19


Estado 112

   21 functionHeader: functionHeaderOpen definingParameter ')' ':' .

    $default  reduce usando la regla 21 (functionHeader)


Estado 113

   24 definingParameter: definingParameter ',' IDENTIFIER .

    $default  reduce usando la regla 24 (definingParameter)


Estado 114

   36 control: controlHeader instructions ELSE error . $@2 instructions END

    $default  reduce usando la regla 35 ($@2)

    $@2  ir al estado 119


Estado 115

   29 control: controlHeader instructions ELSE ':' . instructions END
   32        | controlHeader instructions ELSE ':' . instructions error

    WRITE       desplazar e ir al estado 1
    RETURN      desplazar e ir al estado 2
    WHILE       desplazar e ir al estado 3
    IF          desplazar e ir al estado 4
    IDENTIFIER  desplazar e ir al estado 5

    $default  reduce usando la regla 10 (instruction)

    instructions        ir al estado 120
    instruction         ir al estado 8
    return              ir al estado 9
    assignment          ir al estado 10
    bareFunctionCall    ir al estado 11
    writeCall           ir al estado 12
    functionHeaderOpen  ir al estado 13
    functionHeader      ir al estado 14
    functionDefinition  ir al estado 15
    controlHeader       ir al estado 16
    control             ir al estado 17
    loopHeader          ir al estado 18
    loop                ir al estado 19


Estado 116

   27 parameter: parameter ',' expression .
   42 expression: expression . EQUALS expression
   43           | expression . DIFFERENT expression
   44           | expression . GREATER expression
   45           | expression . LESS expression
   46           | expression . GREATEREQUAL expression
   47           | expression . LESSEQUAL expression

    GREATER       desplazar e ir al estado 63
    LESS          desplazar e ir al estado 64
    EQUALS        desplazar e ir al estado 65
    GREATEREQUAL  desplazar e ir al estado 66
    LESSEQUAL     desplazar e ir al estado 67
    DIFFERENT     desplazar e ir al estado 68

    $default  reduce usando la regla 27 (parameter)


Estado 117

    3 instructions: instructions . NEWINSTRUCTION instruction
   41 loop: WHILE expression error $@3 instructions . END

    END             desplazar e ir al estado 121
    NEWINSTRUCTION  desplazar e ir al estado 50


Estado 118

    3 instructions: instructions . NEWINSTRUCTION instruction
   34 control: IF expression error $@1 instructions . END

    END             desplazar e ir al estado 122
    NEWINSTRUCTION  desplazar e ir al estado 50


Estado 119

   36 control: controlHeader instructions ELSE error $@2 . instructions END

    WRITE       desplazar e ir al estado 1
    RETURN      desplazar e ir al estado 2
    WHILE       desplazar e ir al estado 3
    IF          desplazar e ir al estado 4
    IDENTIFIER  desplazar e ir al estado 5

    $default  reduce usando la regla 10 (instruction)

    instructions        ir al estado 123
    instruction         ir al estado 8
    return              ir al estado 9
    assignment          ir al estado 10
    bareFunctionCall    ir al estado 11
    writeCall           ir al estado 12
    functionHeaderOpen  ir al estado 13
    functionHeader      ir al estado 14
    functionDefinition  ir al estado 15
    controlHeader       ir al estado 16
    control             ir al estado 17
    loopHeader          ir al estado 18
    loop                ir al estado 19


Estado 120

    3 instructions: instructions . NEWINSTRUCTION instruction
   29 control: controlHeader instructions ELSE ':' instructions . END
   32        | controlHeader instructions ELSE ':' instructions . error

    error           desplazar e ir al estado 124
    END             desplazar e ir al estado 125
    NEWINSTRUCTION  desplazar e ir al estado 50


Estado 121

   41 loop: WHILE expression error $@3 instructions END .

    $default  reduce usando la regla 41 (loop)


Estado 122

   34 control: IF expression error $@1 instructions END .

    $default  reduce usando la regla 34 (control)


Estado 123

    3 instructions: instructions . NEWINSTRUCTION instruction
   36 control: controlHeader instructions ELSE error $@2 instructions . END

    END             desplazar e ir al estado 126
    NEWINSTRUCTION  desplazar e ir al estado 50


Estado 124

   32 control: controlHeader instructions ELSE ':' instructions error .

    $default  reduce usando la regla 32 (control)


Estado 125

   29 control: controlHeader instructions ELSE ':' instructions END .

    $default  reduce usando la regla 29 (control)


Estado 126

   36 control: controlHeader instructions ELSE error $@2 instructions END .

    $default  reduce usando la regla 36 (control)
